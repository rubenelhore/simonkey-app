rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // =================================
    // FUNCIONES DE AUTENTICACIÓN
    // =================================

    function isSignedIn() {
      return request.auth != null;
    }

    function getProfile() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isSuperAdmin() {
      return isSignedIn() && getProfile().subscription == 'super_admin';
    }

    // NUEVO - Función para verificar si es usuario escolar
    function isSchoolUser() {
      return isSignedIn() && getProfile().subscription == 'school';
    }

    // NUEVO - Función para obtener el rol escolar
    function getSchoolRole() {
      return getProfile().schoolRole;
    }

    // NUEVO - Función para verificar si es profesor
    function isTeacher() {
      return isSchoolUser() && getSchoolRole() == 'teacher';
    }

    // NUEVO - Función para verificar si es estudiante
    function isStudent() {
      return isSchoolUser() && getSchoolRole() == 'student';
    }

    // NUEVO - Función para obtener el schoolId del usuario
    function getUserSchoolId() {
      return getProfile().schoolId;
    }

    // =================================
    // REGLAS PARA COLECCIONES ESCOLARES
    // =================================

    // NUEVO - Reglas para la colección 'schools'
    match /schools/{schoolId} {
      // Profesores y estudiantes pueden leer los datos de su propia escuela
      allow read: if isSchoolUser() && getUserSchoolId() == schoolId;
      
      // Solo súper admins pueden crear, actualizar o eliminar escuelas
      allow write, create, update, delete: if isSuperAdmin();
    }

    // NUEVO - Reglas para schoolTeachers y schoolStudents
    match /schoolTeachers/{teacherId} {
      allow read: if isSchoolUser(); // Profesores pueden ver a otros profesores
      allow write, delete: if isSuperAdmin(); // Solo admins pueden modificar
    }

    match /schoolStudents/{studentId} {
      allow read: if isTeacher(); // Profesores pueden ver a sus estudiantes
      allow write, delete: if isSuperAdmin(); // Solo admins pueden modificar
    }

    // NUEVO - Reglas para schoolNotebooks
    match /schoolNotebooks/{notebookId} {
      // Profesores pueden crear, leer, actualizar y eliminar cuadernos de su escuela
      allow read, write, create, delete: if isTeacher() && getUserSchoolId() == request.resource.data.schoolId;

      // Estudiantes pueden leer los cuadernos de su escuela
      allow read: if isStudent() && getUserSchoolId() == resource.data.schoolId;
    }

    // =================================
    // REGLAS PARA COLECCIONES GENERALES
    // =================================

    // Reglas para notebooks de usuarios normales
    match /notebooks/{notebookId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow update: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Súper admins tienen acceso total
      allow read, write, delete: if isSuperAdmin();
      // Usuarios autenticados pueden acceder a su propio perfil
      allow read, write, delete: if isSignedIn() && request.auth.uid == userId;

      // Subcolecciones de usuario
      match /{subcollection}/{docId} {
        allow read, write, delete: if isSuperAdmin() || (isSignedIn() && request.auth.uid == userId);
      }
    }

    // Reglas para conceptos
    match /conceptos/{conceptoId} {
      allow read: if isSignedIn() && exists(/databases/$(database)/documents/notebooks/$(resource.data.cuadernoId));
      allow write, delete: if isSignedIn(); // Consider tightening this rule if needed
    }

    // Reglas para conceptos de repaso - MODIFICADO
    match /reviewConcepts/{reviewId} {
      allow read, write, delete: if isSignedIn(); // Permitir todas las operaciones para usuarios autenticados
    }

    // NUEVA - Reglas para sesiones de estudio
    match /studySessions/{sessionId} {
      allow read, write, create, update, delete: if isSignedIn(); // Consider more specific rules
    }

    // NUEVA - Reglas para estadísticas de conceptos
    match /conceptStats/{statId} {
      allow read, write, delete: if isSignedIn(); // Consider more specific rules
    }

    // Reglas para usuarios (colección en español)
    match /usuarios/{userId} {
      allow read, write, delete: if isSuperAdmin() || (isSignedIn() && request.auth.uid == userId);

      // Reglas para configuraciones en español
      match /configuraciones/{document=**} {
        allow read, write, delete: if isSuperAdmin() || (isSignedIn() && request.auth.uid == userId);
      }
    }

    // NUEVA - Regla para actividades de usuario
    match /userActivities/{activityId} {
      allow read, write, delete: if isSuperAdmin() || isSignedIn(); // Consider more specific rules
    }

    // NUEVA - Reglas específicas para instituciones (solo súper admins)
    match /institutions/{institutionId} {
      allow read, write, create, update, delete: if isSuperAdmin();
    }

    // NUEVA - Regla global para súper admins (al final para evitar conflictos)
    match /{document=**} {
      allow read, write, create, update, delete: if isSuperAdmin();
    }
  }
} 