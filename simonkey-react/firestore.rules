rules_version = '2';

// Reglas para la base de datos principal (default)
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función auxiliar para verificar si el usuario es Super Admin
    function isSuperAdmin() {
      return request.auth != null && 
             request.auth.token.email in ['ruben.elhore@gmail.com', 'simon.elhore@gmail.com'];
    }
    
    // Función auxiliar para obtener datos del usuario autenticado
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Función para verificar si es usuario escolar
    function isSchoolUser() {
      return request.auth != null && 
             getUserData().subscription == 'school';
    }
    
    // Función para verificar si es profesor
    function isTeacher() {
      return request.auth != null && 
             getUserData().subscription == 'school' &&
             getUserData().schoolRole == 'teacher';
    }
    
    // Función para verificar si es estudiante
    function isStudent() {
      return request.auth != null && 
             getUserData().subscription == 'school' &&
             getUserData().schoolRole == 'student';
    }
    
    // ========== USUARIOS ==========
    match /users/{userId} {
      // Super Admin puede leer todos los usuarios
      allow read: if request.auth != null && 
                    (request.auth.uid == userId || isSuperAdmin());
      
      // Permitir creación si está autenticado y el ID coincide
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Permitir actualización si es el propietario o Super Admin
      allow update: if request.auth != null && 
                      (request.auth.uid == userId || isSuperAdmin());
      
      // Permitir eliminación solo a Super Admin
      allow delete: if request.auth != null && isSuperAdmin();
      
      // Subcolecciones del usuario
      match /{subcollection}/{document} {
        allow read, write: if request.auth != null && 
                            (request.auth.uid == userId || isSuperAdmin());
      }
      
      // Permitir a Cloud Functions actualizar el uso de Gemini
      match /geminiUsage/{date} {
        allow read: if request.auth != null && 
                      (request.auth.uid == userId || isSuperAdmin());
        allow write: if request.auth != null && 
                       (request.auth.uid == userId || isSuperAdmin() || 
                        request.auth.token.firebase.sign_in_provider == 'firebase-functions');
      }
    }
    
    // Para búsqueda de usuarios por email (necesario para checkUserExistsByEmail)
    match /users/{userId} {
      allow read: if request.auth != null;
    }
    
    // Para búsqueda en colección 'usuarios' si existe
    match /usuarios/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isSuperAdmin();
    }
    
    // ========== STUDY SESSIONS ==========
    match /studySessions/{sessionId} {
      allow create: if request.auth != null && 
                      request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && 
                           (resource.data.userId == request.auth.uid || isSuperAdmin());
      allow delete: if request.auth != null && isSuperAdmin();
    }
    
    // ========== USER STATS ==========
    match /userStats/{userId} {
      allow read, write: if request.auth != null && 
                          (request.auth.uid == userId || isSuperAdmin());
    }
    
    // ========== QUIZ RESULTS ==========
    match /quizResults/{resultId} {
      allow create: if request.auth != null && 
                      request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && 
                    (resource.data.userId == request.auth.uid || isSuperAdmin());
      allow update, delete: if request.auth != null && isSuperAdmin();
    }
    
    // ========== CONFIGURACIONES DEL SISTEMA ==========
    match /systemSettings/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isSuperAdmin();
    }
    
    match /subscriptionLimits/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isSuperAdmin();
    }
    
    match /schoolRolePermissions/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isSuperAdmin();
    }
    
    // ========== NOTEBOOKS ==========
    match /notebooks/{notebookId} {
      allow read: if request.auth != null && 
                    (resource.data.userId == request.auth.uid || 
                     resource.data.shareId != null || 
                     isSuperAdmin());
      allow create: if request.auth != null && 
                      request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                              (resource.data.userId == request.auth.uid || isSuperAdmin());
    }
    
    // ========== CONCEPTOS ==========
    match /conceptos/{conceptId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                      request.resource.data.usuarioId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                              (resource.data.usuarioId == request.auth.uid || isSuperAdmin());
    }
    
    // ========== COLECCIONES ESCOLARES ==========
    match /schoolStudents/{document} {
      allow read: if request.auth != null && (isSchoolUser() || isSuperAdmin());
      allow write: if request.auth != null && (isTeacher() || isSuperAdmin());
    }
    
    match /schoolTeachers/{document} {
      allow read: if request.auth != null && (isSchoolUser() || isSuperAdmin());
      allow write: if request.auth != null && isSuperAdmin();
    }
    
    match /schoolNotebooks/{document} {
      allow read: if request.auth != null && (isSchoolUser() || isSuperAdmin());
      allow create: if request.auth != null && isTeacher();
      allow update: if request.auth != null && (isTeacher() || isSuperAdmin());
      allow delete: if request.auth != null && isSuperAdmin();
    }
    
    match /schoolConcepts/{document} {
      allow read: if request.auth != null && (isSchoolUser() || isSuperAdmin());
      allow create: if request.auth != null && isTeacher();
      allow update: if request.auth != null && (isTeacher() || isSuperAdmin());
      allow delete: if request.auth != null && isSuperAdmin();
    }
    
    match /schoolSubjects/{document} {
      allow read: if request.auth != null && (isSchoolUser() || isSuperAdmin());
      allow write: if request.auth != null && (isTeacher() || isSuperAdmin());
    }
    
    // ========== LINKED ACCOUNTS (para verificación de cuentas vinculadas) ==========
    match /linkedAccounts/{document} {
      allow read: if request.auth != null && isSuperAdmin();
      allow write: if request.auth != null && isSuperAdmin();
    }
    
    // ========== COLLECTIONS TEMPORALES PARA TESTS ==========
    match /test/{document} {
      allow read, write: if request.auth != null && isSuperAdmin();
    }
    
    // ========== COLECCIONES ESCOLARES ADICIONALES ==========
    match /schoolInstitutions/{document} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && isSuperAdmin();
    }
    
    match /schoolAdmins/{document} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && isSuperAdmin();
    }
    
    match /schoolTutors/{document} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && isSuperAdmin();
    }
    
    // ========== SESIONES DE ESTUDIO ==========
    match /studySessions/{sessionId} {
      allow create: if request.auth != null && 
                      (request.resource.data.userId == request.auth.uid || 
                       request.resource.data.userId == 'student_' + request.auth.uid);
      allow read, update: if request.auth != null && 
                           (resource.data.userId == request.auth.uid || 
                            resource.data.userId == 'student_' + request.auth.uid || 
                            isSuperAdmin());
      allow delete: if request.auth != null && isSuperAdmin();
    }
    
    // ========== LEARNING DATA (Datos de aprendizaje SM-3) ==========
    match /learningData/{userId}/concepts/{conceptId} {
      allow read, write: if request.auth != null && 
                          (userId == request.auth.uid || userId == 'student_' + request.auth.uid || isSuperAdmin());
    }
    
    // ========== LEARNING DATA dentro de users (para estudiantes) ==========
    match /users/{userId}/learningData/{conceptId} {
      allow read, write: if request.auth != null && 
                          (userId == request.auth.uid || userId == 'student_' + request.auth.uid || isSuperAdmin());
    }
    
    // ========== USER ACTIVITIES ==========
    match /userActivities/{activityId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
                    (resource.data.userId == request.auth.uid || 
                     resource.data.userId == 'student_' + request.auth.uid || 
                     isSuperAdmin());
      allow update, delete: if request.auth != null && isSuperAdmin();
    }
    
    // ========== NOTEBOOK LIMITS ==========
    match /users/{userId}/notebookLimits/{notebookId} {
      allow read, write: if request.auth != null && 
                          (userId == request.auth.uid || userId == 'student_' + request.auth.uid || isSuperAdmin());
    }
    
    // ========== USER STATS ==========
    match /users/{userId}/stats/{statType} {
      allow read, write: if request.auth != null && 
                          (userId == request.auth.uid || userId == 'student_' + request.auth.uid || isSuperAdmin());
    }
    
    // ========== CATEGORÍAS PERSONALIZADAS ==========
    match /categories/{categoryId} {
      allow read, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Permitir a Super Admin acceso completo a cualquier colección no especificada
    match /{document=**} {
      allow read: if request.auth != null && isSuperAdmin();
      allow write: if request.auth != null && isSuperAdmin();
    }
  }
}