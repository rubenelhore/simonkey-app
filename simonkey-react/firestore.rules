rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario es super admin
    function isSuperAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'super_admin';
    }
    
    // Función para verificar si el usuario es propietario del documento
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para la colección de usuarios
    match /users/{userId} {
      // Permitir lectura si es el propietario o super admin
      allow read: if isOwner(userId) || isSuperAdmin();
      
      // Permitir escritura si es el propietario o super admin
      allow write: if isOwner(userId) || isSuperAdmin();
      
      // Permitir eliminación si es el propietario o super admin
      allow delete: if isOwner(userId) || isSuperAdmin();
    }
    
    // Reglas para la colección de notebooks
    match /notebooks/{notebookId} {
      // Permitir lectura si es el propietario o super admin
      allow read: if isOwner(resource.data.userId) || isSuperAdmin();
      
      // Permitir escritura si es el propietario o super admin
      allow write: if isOwner(resource.data.userId) || isSuperAdmin();
      
      // Permitir eliminación si es el propietario o super admin
      allow delete: if isOwner(resource.data.userId) || isSuperAdmin();
    }
    
    // Reglas para la colección de conceptos
    match /concepts/{conceptId} {
      // Permitir lectura si es el propietario del notebook o super admin
      allow read: if isOwner(resource.data.userId) || isSuperAdmin();
      
      // Permitir escritura si es el propietario del notebook o super admin
      allow write: if isOwner(resource.data.userId) || isSuperAdmin();
      
      // Permitir eliminación si es el propietario del notebook o super admin
      allow delete: if isOwner(resource.data.userId) || isSuperAdmin();
    }
    
    // Reglas para la colección de instituciones (solo super admin)
    match /institutions/{institutionId} {
      allow read, write, delete: if isSuperAdmin();
    }
    
    // Reglas para la colección de usuarios (colección alternativa)
    match /usuarios/{userId} {
      // Permitir lectura si es el propietario o super admin
      allow read: if isOwner(userId) || isSuperAdmin();
      
      // Permitir escritura si es el propietario o super admin
      allow write: if isOwner(userId) || isSuperAdmin();
      
      // Permitir eliminación si es el propietario o super admin
      allow delete: if isOwner(userId) || isSuperAdmin();
    }
  }
} 