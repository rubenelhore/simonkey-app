import { getFunctions, httpsCallable } from 'firebase/functions';
import { getApp } from 'firebase/app';

/**
 * Funci√≥n para probar la llamada a Firebase Functions
 */
export const testFirebaseFunction = async () => {
  console.log('üîß === PROBANDO FIREBASE FUNCTIONS ===');
  
  try {
    const app = getApp();
    const functions = getFunctions(app, 'us-central1');
    
    // Intentar llamar a la funci√≥n con datos m√≠nimos
    const generateConceptsFromFile = httpsCallable(functions, 'generateConceptsFromFile');
    
    console.log('üì° Intentando llamar a generateConceptsFromFile...');
    
    // Datos de prueba m√≠nimos
    const testData = {
      fileContent: 'Test content',
      notebookId: 'test-notebook',
      fileName: 'test.txt',
      isSchoolNotebook: false,
      fileType: 'text'
    };
    
    console.log('üì¶ Datos de prueba:', testData);
    
    try {
      const result = await generateConceptsFromFile(testData);
      console.log('‚úÖ Respuesta exitosa:', result);
    } catch (error: any) {
      console.error('‚ùå Error al llamar la funci√≥n:', error);
      console.error('  - C√≥digo:', error.code);
      console.error('  - Mensaje:', error.message);
      console.error('  - Detalles:', error.details);
      
      if (error.code === 'functions/not-found') {
        console.log('‚ö†Ô∏è La funci√≥n no se encuentra en la URL esperada');
        console.log('üí° Posibles causas:');
        console.log('  1. La funci√≥n est√° en v2 pero se est√° llamando como v1');
        console.log('  2. La regi√≥n es incorrecta');
        console.log('  3. El nombre de la funci√≥n es incorrecto');
      }
    }
    
  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
};

// Funci√≥n alternativa para probar con fetch directo
export const testFunctionDirectly = async () => {
  console.log('üîß === PROBANDO FUNCI√ìN DIRECTAMENTE ===');
  
  try {
    // URL para funciones v2
    const v2Url = 'https://generateconceptsfromfile-xktrwmtqea-uc.a.run.app';
    
    console.log('üì° Probando URL v2:', v2Url);
    
    const response = await fetch(v2Url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        data: {
          fileContent: 'Test',
          notebookId: 'test',
          fileName: 'test.txt',
          isSchoolNotebook: false,
          fileType: 'text'
        }
      })
    });
    
    console.log('üìä Respuesta HTTP:', response.status, response.statusText);
    
    if (!response.ok) {
      const text = await response.text();
      console.log('‚ùå Respuesta de error:', text);
    } else {
      const data = await response.json();
      console.log('‚úÖ Respuesta exitosa:', data);
    }
    
  } catch (error) {
    console.error('‚ùå Error en fetch directo:', error);
  }
};

// Hacer las funciones disponibles globalmente
if (typeof window !== 'undefined') {
  (window as any).testFirebaseFunction = testFirebaseFunction;
  (window as any).testFunctionDirectly = testFunctionDirectly;
  console.log('üîß Funciones testFirebaseFunction() y testFunctionDirectly() disponibles en la consola');
}