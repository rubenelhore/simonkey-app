rules_version = '2';

// REGLAS TEMPORALES PARA DEBUGGING
// ⚠️ ADVERTENCIA: Estas reglas son muy permisivas, usar solo para debugging
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función auxiliar para verificar si el usuario es Super Admin
    function isSuperAdmin() {
      return request.auth != null && 
             request.auth.token.email in ['ruben.elhore@gmail.com', 'simon.elhore@gmail.com'];
    }
    
    // ========== REGLAS TEMPORALES MUY PERMISIVAS ==========
    // Permitir acceso total a usuarios autenticados para debugging
    
    match /users/{userId} {
      allow read, write: if request.auth != null;
    }
    
    match /schoolSubjects/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /schoolNotebooks/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /schoolInstitutions/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Resto de colecciones con reglas normales
    match /notebooks/{notebookId} {
      allow read: if request.auth != null && 
                    (resource.data.userId == request.auth.uid || 
                     resource.data.shareId != null || 
                     isSuperAdmin());
      allow create: if request.auth != null && 
                      request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                              (resource.data.userId == request.auth.uid || isSuperAdmin());
    }
    
    match /conceptos/{conceptId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                      request.resource.data.usuarioId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                              (resource.data.usuarioId == request.auth.uid || isSuperAdmin());
    }
    
    // Permitir a Super Admin acceso completo a cualquier colección no especificada
    match /{document=**} {
      allow read: if request.auth != null && isSuperAdmin();
      allow write: if request.auth != null && isSuperAdmin();
    }
  }
}