rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función auxiliar para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función auxiliar para verificar si es el dueño del documento (por UID o por ID de documento)
    function isOwner(userId) {
      return isAuthenticated() && (
        request.auth.uid == userId || 
        resource.data.userId == request.auth.uid ||
        resource.data.usuarioId == request.auth.uid ||
        resource.data.googleAuthUid == request.auth.uid
      );
    }
    
    // Función para verificar si el email coincide (para usuarios escolares)
    function isEmailMatch() {
      return isAuthenticated() && 
        request.auth.token.email != null && 
        resource.data.email == request.auth.token.email;
    }
    
    // Colección de usuarios - permitir lectura por email o UID
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || 
        isEmailMatch() ||
        resource.data.googleAuthUid == request.auth.uid
      );
      allow write: if isAuthenticated() && (
        request.auth.uid == userId || 
        isEmailMatch() ||
        resource.data.googleAuthUid == request.auth.uid ||
        !exists(/databases/$(database)/documents/users/$(userId)) // Permitir crear nuevo usuario
      );
      
      // Subcolecciones del usuario
      match /{subcollection}/{document} {
        allow read, write: if isAuthenticated() && (
          request.auth.uid == userId || 
          get(/databases/$(database)/documents/users/$(userId)).data.googleAuthUid == request.auth.uid
        );
      }
    }
    
    // Permitir búsquedas por email en users (para usuarios escolares)
    match /users/{document} {
      allow read: if isAuthenticated() && (
        resource.data.email == request.auth.token.email ||
        resource.data.googleAuthUid == request.auth.uid
      );
    }
    
    // Notebooks - solo el dueño puede leer/escribir
    match /notebooks/{notebookId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) ||
        resource.data.isPublic == true
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        isOwner(resource.data.userId);
    }
    
    // Conceptos - acceso basado en el dueño
    match /conceptos/{conceptId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.usuarioId) ||
        resource.data.esPublico == true
      );
      allow write: if isAuthenticated();
    }
    
    // Colecciones escolares - acceso para usuarios autenticados
    match /schoolNotebooks/{notebookId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (
        resource.data.idProfesor == request.auth.uid ||
        !exists(/databases/$(database)/documents/schoolNotebooks/$(notebookId))
      );
    }
    
    match /schoolConcepts/{conceptId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    match /schoolSubjects/{subjectId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    match /schoolInstitutions/{institutionId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Sesiones de estudio - acceso por usuario
    match /studySessions/{sessionId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) ||
        resource.data.userId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        isOwner(resource.data.userId);
    }
    
    // Actividades del usuario
    match /userActivities/{activityId} {
      allow read: if isAuthenticated() && 
        isOwner(resource.data.userId);
      allow create: if isAuthenticated();
      allow update, delete: if false; // Las actividades no se deben modificar
    }
    
    // Eliminaciones de usuario
    match /userDeletions/{deletionId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.adminId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.adminId == request.auth.uid;
    }
    
    // Configuración pública (para todos los usuarios autenticados)
    match /config/{configId} {
      allow read: if isAuthenticated();
      allow write: if false; // Solo admins desde consola
    }
    
    // Notificaciones
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow write: if isAuthenticated();
    }
    
    // Para cualquier otra colección, mantener el acceso actual
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}